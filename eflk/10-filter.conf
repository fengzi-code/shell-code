filter {
    mutate {
        remove_field => [ "offset","beat","@version","input_type"]
        remove_tag => ["beats_input_codec_plain_applied"]
    }

  if  [type] == "mzj-java" {
          if ([message] =~ "INFO") {
             drop {}
          }

 }

  if [type] == "nginx_access" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG} %{QS:xforwardedfor} (%{QS:domain}|-) %{QS:upst_ip} (%{NUMBER:upst_response}|-) (%{BASE16FLOAT:upst_response_time}|-) %{BASE16FLOAT:request_time}"} # 使用自带的pattern即可，注意空格

    }


#获取ph_model
         if [agent] =~ "Mozilla" {
                  mutate { replace => { "ph_model" => "%{agent}" } }   
                               
                  if [ph_model] =~ "iPhone" {
                        mutate { replace => { "ph_model" => "iPhone" } }
                  } else {
          #以分号分割ph_model，获取手机厂商和型号
          mutate { split => ["ph_model", ";"] }
          mutate { replace => { "ph_model" => "%{ph_model[2]}" } }
          mutate { split => ["ph_model", " "] }
          mutate { replace => { "ph_model" => "%{ph_model[0]} %{ph_model[1]}" } }
                 }
          }


#获取agent
         if [agent] =~ "Mozilla" {
                  if [agent] =~ "iPhone" {
			mutate { replace => { "agent" => "iPhone" } }
                  } else if [agent] =~ "HUAWEI" {
                        mutate { replace => { "agent" => "HUAWEI" } }
		  } else {
          #以分号分割agent，获取手机厂商和型号
          mutate { split => ["agent", ";"] }
          mutate { replace => { "agent" => "%{agent[2]}" } }
          mutate { split => ["agent", " "] }
          mutate { replace => { "agent" => "%{agent[0]}" } }
		 }
          }


#获取真实IP
         if [xforwardedfor] !~ "\"-\"" {
          mutate { split => ["xforwardedfor", ","] }
          mutate { gsub => [ "xforwardedfor", "\"", ""] }
          mutate { replace => { "real_ip" => "%{xforwardedfor[0]}" } }
         }
          else {
          mutate { replace => { "real_ip" => "%{clientip}" } }
        }

   geoip {
         source => "real_ip"
         target => "geoip"

         database => "/usr/share/GeoIP/GeoLite2-City.mmdb"
         add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
         add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
         remove_field => ["[geoip][continent_code]","[geoip][region_code]","[geoip][country_code2]","[geoip][ip]","[geoip][timezone]","[geoip][latitude]","[geoip][longitude]"]
        }
        mutate {
                convert => [ "[geoip][coordinates]", "float"]
        }




    # 指定时间戳字段以及具体的格式
    date {
      match => ["timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
#      remove_field => ["timestamp"]
    }
  }

  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }

}
