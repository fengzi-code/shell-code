awk
-------------------------------------------------------------------------------------------
-F 紧跟分隔符，表示读入的字段以输入的分隔符分割
-v 进入变量模式 可以进行变量的赋值及调用（调用不需要加$符）


$n  当前记录的第n个字段，字段间由 FS分隔。
$0  完整的输入记录。
awk '{print $1,$5}'

内建变量:
FS:输入时的分割符
OFS:输出时的分割符
RS:输入时的换行符
ORS:输出时的换行符
NF:字段数量
NR:文件行数
FNR:多文件行数
FILENAME:文件名字


format格式的指示符都以%开头，后跟一个字符；如下：
%c: 显示字符的ASCII码；
%d, %i：十进制整数；
%e, %E：科学计数法显示数值；
%f: 显示浮点数；
%g, %G: 以科学计数法的格式或浮点数的格式显示数值；
%s: 显示字符串；
%u: 无符号整数；
%%: 显示%自身；
修饰符：
N: 显示宽度；
-: 左对齐；
+：显示数值符号；


awk -F: '{printf "username: %s,UID: %s\n",$1,$3}' /etc/passwd #一个%号对应一个$变量

运算符 描述
= += -= *= /= %= ^= **= 赋值
?:  C条件表达式
||  逻 辑或
&&  逻辑与
~ ~!    匹 配正则表达式和不匹配正则表达式
< <= > >= != == 关 系运算符
空格  连接
+ - 加，减
* / &   乘，除与求余
+ - !   一元加，减和逻辑非
^ ***   求幂
++ --   增加或减少，作为前缀或后缀
$   字 段引用
in  数组成员

--------------------------------------------------------------------------------------------------
sed
--------------------------------------------------------------------------------------------------
sed -h
 -n, --quiet, --silent    取消自动打印模式空间
 -e 脚本, --expression=脚本   添加“脚本”到程序的运行列表,多点编辑
 -f 脚本文件, --file=脚本文件  添加“脚本文件”到程序的运行列表
 --follow-symlinks    直接修改文件时跟随软链接
 -i[扩展名], --in-place[=扩展名]    直接修改文件(如果指定扩展名就备份文件)
 -l N, --line-length=N   指定“l”命令的换行期望长度
 --posix  关闭所有 GNU 扩展
 -r, --regexp-extended  在脚本中使用扩展正则表达式
 -s, --separate  将输入文件视为各个独立的文件而不是一个长的连续输入
 -u, --unbuffered  从输入文件读取最少的数据，更频繁的刷新输出
 --help     打印帮助并退出
 --version  输出版本信息并退出
 -a ∶新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～
 -c ∶取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！
 -d ∶删除，因为是删除啊，所以 d 后面通常不接任何咚咚；
 -i ∶插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；
 -p ∶列印，亦即将某个选择的资料印出。通常 p 会与参数 sed -n 一起运作～
 -s ∶取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法


sed '/^#/d' /etc/fstab

